# Note that most of the comments here were taken from sample
# input files that came with APBS.  You can find APBS at
# https://github.com/Electrostatics/apbs
# Note that APBS is GPL'd code.
#
read
    mol pqr ${pqr_filename}       # read molecule 1
end
elec
    mg-auto
    # grid calculated by psize.py:
    dime   ${grid_points_0} ${grid_points_1} ${grid_points_2}   # number of find grid points
    cglen  ${grid_coarse_x} ${grid_coarse_y} ${grid_coarse_z}   # coarse mesh lengths (A)
    fglen  ${grid_fine_x} ${grid_fine_y} ${grid_fine_z}         # fine mesh lengths (A)
    cgcent ${grid_center_x} ${grid_center_y} ${grid_center_z}   # (could also give (x,y,z) from psize.py) #known center
    fgcent ${grid_center_x} ${grid_center_y} ${grid_center_z}   # (could also give (x,y,z) from psize.py) #known center
    ${apbs_mode}            # solve the full nonlinear PBE ("npbe") or linear PBE ("lpbe")
    bcfl ${bcfl}            # Boundary condition flag:
                            #  0 => Zero
                            #  1 => Single DH sphere
                            #  2 => Multiple DH spheres
                            #  4 => Focusing

    #ion 1 0.000 2.0 # Counterion declaration:
    ion charge  1 conc ${ion_plus_one_conc} radius ${ion_plus_one_rad}      # Counterion declaration:
    ion charge -1 conc ${ion_minus_one_conc} radius ${ion_minus_one_rad}    # ion <charge> <conc (M)> <radius>
    ion charge  2 conc ${ion_plus_two_conc} radius ${ion_plus_two_rad}      # ion <charge> <conc (M)> <radius>
    ion charge -2 conc ${ion_minus_two_conc} radius ${ion_minus_two_rad}    # ion <charge> <conc (M)> <radius>
    pdie ${interior_dielectric}        # Solute dielectric
    sdie ${solvent_dielectric}         # Solvent dielectric
    chgm ${chgm}            # Charge disc method
                            # 0 is linear splines
                            # 1 is cubic b-splines
    mol 1                   # which molecule to use
    srfm smol               # Surface calculation method
                            #  0 => Mol surface for epsilon; inflated VdW for kappa; no smoothing
                            #  1 => As 0 with harmoinc average smoothing
                            #  2 => Cubic spline
    srad ${solvent_radius}  # Solvent radius (1.4 for water)
    swin 0.3                # Surface cubic spline window .. default 0.3
    temp ${system_temp}     # System temperature (298.15 default)
    sdens ${sdens}          # Specify the number of grid points per square-angstrom to use in Vacc object.
                            # Ignored when srad is 0.0 (see srad) or srfm is spl2 (see srfm). There is a
                            # direct correlation between the value used for the Vacc sphere density, the
                            # accuracy of the Vacc object, and the APBS calculation time. APBS default value is 10.0.
    #gamma 0.105            # Surface tension parameter for apolar forces (in kJ/mol/A^2)
                            # only used for force calculations, so we don't care, but
                            # it *used to be* always required, and 0.105 is the default
    calcenergy no           # Energy I/O to stdout
                            #  0 => don't write out energy
                            #  1 => write out total energy
                            #  2 => write out total energy and all components
    calcforce no            # Atomic forces I/O (to stdout)
                            #  0 => don't write out forces
                            #  1 => write out net forces on molecule
                            #  2 => write out atom-level forces
    write pot dx ${dx_filename}  # write the potential in dx format to a file.
end
quit
